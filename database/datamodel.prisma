#----------TYPES----------
type User {
  id: ID! @unique
  username: String!
  email: String! @unique
  password: String!
  projects: [Project!]! @relation(name: "ProjectsByUser", onDelete: CASCADE)
  events: [Event!]! @relation(name: "EventsByUser", onDelete: CASCADE)
  creatures: [Creature!]! @relation(name: "CreaturesByUser", onDelete: CASCADE)
  updatedAt: DateTime!
  createdAt: DateTime!
}

type Project {
  id: ID! @unique
  title: String!
  description: String
  rulebook: Rulebook!
  events: [Event!]! @relation(name: "EventsByProject", onDelete: CASCADE)
  author: User! @relation(name: "ProjectsByUser", onDelete: SET_NULL)
}

type Event {
  id: ID! @unique
  author: User! @relation(name: "EventsByUser", onDelete: SET_NULL)
  title: String!
  description: String
  eventRole: EventRole!
  index: Int!
  project: Project! @relation(name: "EventsByProject", onDelete: SET_NULL)
  creatures: [Creature!]! @relation(name: "EventsByCreature", onDelete: CASCADE)
}

type Creature {
  id: ID! @unique
  author: User! @relation(name: "CreaturesByUser", onDelete: SET_NULL)
  event: Event! @relation(name: "EventsByCreature", onDelete: SET_NULL)
  name: String
  race: String!
  shadow: String
  rulebook: Rulebook!
  Conditions: Conditions! @relation(name: "ConditionsByCreature", onDelete: CASCADE)
  attributes: Attributes! @relation(name: "AttributesByCreature", onDelete: CASCADE)
}

type Attributes {
  id: ID! @unique
  creature: Creature! @relation(name: "AttributesByCreature", onDelete: SET_NULL)
  accurate: Int!
  cunning: Int!
  discreet: Int!
  persuasive: Int!
  quick: Int!
  resolute: Int!
  strong: Int!
  vigilant: Int!
  defense: Int!
}

type Conditions {
  id: ID! @unique
  creature: Creature! @relation(name: "ConditionsByCreature", onDelete: SET_NULL)
  physical: PhysicalConditions! @relation(name: "ConditionsByPhysicalCondition", onDelete: CASCADE)
  spiritual: SpiritualConditions! @relation(name: "ConditionsBySpiritualCondition", onDelete: CASCADE)
}

type PhysicalConditions {
  id: ID! @unique
  conditions: Conditions! @relation(name: "ConditionsByPhysicalCondition", onDelete: SET_NULL)
  fitness: Fitness! @relation(name: "PhysicalConditionsByFitness", onDelete: CASCADE)
}

type SpiritualConditions {
  id: ID! @unique
  conditions: Conditions! @relation(name: "ConditionsBySpiritualCondition", onDelete: SET_NULL)
  corruption: Corruption! @relation(name: "CorruptionBySpiritualConditions", onDelete: CASCADE)
}

type Fitness {
  id: ID! @unique
  physicalConditions: PhysicalConditions! @relation(name: "PhysicalConditionsByFitness", onDelete: SET_NULL)
  toughness: Int!
  painThreshold: Int!
}

type Corruption {
  id: ID! @unique
  spiritualConditions: SpiritualConditions! @relation(name: "CorruptionBySpiritualConditions", onDelete: SET_NULL)
  current: Int!
  threshold: Int!
  permanent: Int!
}

#----------ENUMS----------
enum EventRole {
  GENERIC
  QUEST
  COMBAT
}

enum Rulebook {
  SYMBAROUM
  COC
  DSA
}
